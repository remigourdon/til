name: Build static site with Hugo and publish with Netlify

on:
  push:
    branches:
      - main

env:
  REPO_DIR: repo
  NETLIFY_CLI_VERSION: "^12.2.1"

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          path: ${{ env.REPO_DIR }}
          ref: main
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - uses: actions/cache@v3
        name: Configure pip caching
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip --disable-pip-version-check install --requirement $REPO_DIR/requirements.txt
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 0.106.0
      - name: Build static site
        run: |-
          cd $REPO_DIR
          ./hugo_build.sh
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: hugo-static-site
          path: ${{ env.REPO_DIR }}/.build/public/
  publish:
    runs-on: ubuntu-22.04
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: hugo-static-site
          path: site
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "dir=$(npm config get cache)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ env.NETLIFY_CLI_VERSION }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install Netlify CLI
        run: npm install -g "netlify-cli@${NETLIFY_CLI_VERSION}"
      - name: Publish to Netlify
        run: netlify deploy --dir site --prod
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
